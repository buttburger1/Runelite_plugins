//BY BUTTBURGER 2023 MARKER FILL FOR AGILITY SEERS VILLAGE COURSE
//PLUGINS BORROWED AND REARRANGED: agility, groundmarkers
package net.runelite.client.plugins.myGroundMarkerFill;


import com.google.inject.Provides;

import javax.annotation.Nullable;
import javax.inject.Inject;


import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.Value;
import net.runelite.api.*;
import net.runelite.api.events.ItemDespawned;
import net.runelite.api.events.ItemSpawned;
import net.runelite.client.events.ConfigChanged;
import net.runelite.api.events.FocusChanged;

import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.events.ConfigChanged;
import net.runelite.client.game.AgilityShortcut;
import net.runelite.client.game.WorldService;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.config.ConfigManager;
//import net.runelite.client.plugins.agility.Obstacle;
import net.runelite.client.plugins.entityhider.EntityHiderConfig;
import net.runelite.client.plugins.fps.FpsDrawListener;
import net.runelite.client.util.WorldUtil;
import net.runelite.http.api.worlds.World;
import net.runelite.http.api.worlds.WorldResult;

import com.google.inject.Provides;
import javax.inject.Inject;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;







import com.google.inject.Provides;
import javax.inject.Inject;

import lombok.Getter;
import lombok.extern.slf4j.Slf4j;
import net.runelite.api.Client;
import net.runelite.api.ItemID;
import net.runelite.api.Player;
import net.runelite.api.TileItem;
import net.runelite.api.MenuAction;
import net.runelite.api.coords.WorldPoint;
import net.runelite.api.events.GameStateChanged;
import net.runelite.api.events.GameTick;
import net.runelite.api.events.ItemDespawned;
import net.runelite.api.events.ItemSpawned;
import net.runelite.client.config.ConfigManager;
import net.runelite.client.eventbus.Subscribe;
import net.runelite.client.events.OverlayMenuClicked;
import net.runelite.client.plugins.Plugin;
import net.runelite.client.plugins.PluginDescriptor;
import net.runelite.client.ui.overlay.OverlayManager;
import net.runelite.client.ui.overlay.OverlayMenuEntry;



@PluginDescriptor(
        name = "Custom Tile Agility",
        description = "Highlight the tile you are currently moving to",
        tags = {"highlight", "overlay"},
        enabledByDefault = false
)


public class myGroundMarkerFillPlugin extends Plugin
{
    @Getter
    private final List<Tile> marksOfGrace = new ArrayList<>();

    @Inject
    private Client client;



    @Inject
    private OverlayManager overlayManager;

    @Inject
    private myGroundMarkerFillOverlay overlay;

    @Provides
    myGroundMarkerFillConfig provideConfig(ConfigManager configManager)
    {
        return configManager.getConfig(myGroundMarkerFillConfig.class);
    }

    @Override
    protected void startUp() throws Exception
    {
        overlayManager.add(overlay);
    }

    @Override
    protected void shutDown() throws Exception
    {
        overlayManager.remove(overlay);
    }


    @Subscribe
    public void onItemSpawned(ItemSpawned itemSpawned)
    {
        final TileItem item = itemSpawned.getItem();
        if (item.getId() == ItemID.MARK_OF_GRACE)
        {
            WorldPoint wp = itemSpawned.getTile().getWorldLocation();
            Player player = client.getLocalPlayer();
            if (player != null)
            {
                if (wp.equals(player.getWorldLocation()))
                {
                    //mogSession.addIgnoreTile(wp);
                }
                else
                {
                    //mogSession.addMarkTile(wp, item.getQuantity());
                    //mSession.addMarkTest(wp);//DO_NOT_USE
                    overlay.reloadScan(itemSpawned);
                }
            }
            // mSession.addMarkTest(wp);
        }
    }


    @Subscribe
    public void onItemDespawned(ItemDespawned itemDespawned)
    {
        final TileItem item = itemDespawned.getItem();
        if (item.getId() == ItemID.MARK_OF_GRACE)
        {
            WorldPoint wp = itemDespawned.getTile().getWorldLocation();
            Player player = client.getLocalPlayer();
            if (player != null)
            {
                if (wp.equals(player.getWorldLocation()))
                {
                    //mogSession.removeIgnoreTile(wp);
                }
                //mogSession.removeMarkTile(wp);
                overlay.graceDespawned();
            }
        }
    }


}


